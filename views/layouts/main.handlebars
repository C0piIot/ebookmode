<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{#if title}}{{ title }} - {{/if}}ebookmode</title>
    <link rel="stylesheet" href="https://cdn.simplecss.org/simple.min.css">
</head>
<body>
    <header>
        <nav>
            <a href="/">üè† Home</a>
            <select id="bookmarks"></select>
            {{#if url}}<a href="{{ url }}">üåç Source</a>{{/if}}
        </nav>
        <h1 id="title">{{#if title}}{{ title }}{{ else }}ebookmode{{/if}}</h1>
        <p>
            <form method="GET" action="/">
                <input type="text" required name="url" placeholder="URL here" value="{{ url }}">
                <button type="submit">üåç Go</button>
                {{#if url}}<button type="button" id="toggleBookmark">+ Bookmark</button>{{/if}}
            </form>
        </p>
    </header>
    <main>{{{ body }}}</main>
    <footer>
        <p>
            Brought to you by <a href="https://dropdatabase.es/">dropdatabase.es</a><br>
            <a href="https://github.com/callmewind/ebookmode">View source</a>
        </p>
    </footer>
    <script type="module">
        const LABEL_MAX_LENGTH = 30;
        const bookmarks = JSON.parse(window.localStorage.getItem('bookmarks')) || {};
        const select = document.getElementById('bookmarks');
        const updateBookmarks = () => {
            const option = document.createElement('option');
            option.textContent = 'üìí Bookmarks'
            select.replaceChildren(
                ...[ option ].concat(
                    Object.keys(bookmarks).map(url => {
                        const option = document.createElement('option');
                        option.value = url;
                        option.textContent = bookmarks[url].substring(0, 20);
                        if(option.textContent.length < bookmarks[url].length) {
                            option.textContent = `${option.textContent}‚Ä¶`;
                        }
                        return option;
                    })
                )
            );
        }

        select.addEventListener(
            'change',
            event => window.location.href =  `/?url=${encodeURIComponent(event.target.value)}`
        );
        updateBookmarks();
        {{#if url}}
        const url = new URLSearchParams(window.location.search).get('url').trim();
        const toggleBookmark = document.getElementById('toggleBookmark');
        toggleBookmark.addEventListener(
            'click',
            function() {
                if (url in bookmarks) {
                    delete bookmarks[url];
                    this.textContent = '+ Bookmark';
                } else {
                    bookmarks[url] = document.getElementById('title').textContent.trim();
                    this.textContent = '- Bookmark';
                }
                window.localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
                updateBookmarks();
            }
        );
        toggleBookmark.textContent = url in bookmarks? '- Bookmark' : '+ Bookmark';
        {{/if}}



    </script>
</body>
</html>