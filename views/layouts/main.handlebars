<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{#if title}}{{ title }} - {{/if}}ebookmode</title>
    <link rel="stylesheet" href="https://cdn.simplecss.org/simple.min.css">
</head>
<body>
    <header>
        <nav>
            <a href="/">üè† Home</a>
            <select id="bookmarks"></select>
            {{#if url}}<a href="{{ url }}">üåç Source</a>{{/if}}
        </nav>
        <h1 id="title">{{#if title}}{{ title }}{{ else }}ebookmode{{/if}}</h1>
        <p>
        <form method="GET" action="/">
            <input type="text" required name="url" placeholder="URL here" value="{{ url }}">
            <button type="submit">üåç Go</button>
            {{#if url}}<button type="button" id="toggleBookmark">+ Bookmark</button>{{/if}}
        </form>
        </p>
    </header>
    <main>{{{ body }}}</main>
    <footer>
        <p>
            Brought to you by <a href="https://dropdatabase.es/">dropdatabase.es</a><br>
            <a href="https://github.com/callmewind/ebookmode">View source</a>
        </p>
    </footer>
    <script type="text/javascript">
        /* old javascript intended for ebook browser compatibility :_) */
        var bookmarkList = {};
        const LABEL_MAX_LENGTH = 30;
        const bookmarksMatch =  /\bbookmarks=([^;]+)/.exec(document.cookie);
        if(bookmarksMatch) {
            bookmarkList = JSON.parse(decodeURIComponent(bookmarksMatch[1]));
        }
        const select = document.getElementById('bookmarks');
        const updateBookmarks = function () {
            while (select.firstChild) {
                select.removeChild(select.firstChild);
            }

            var option = document.createElement('option');
            option.textContent = 'üìí Bookmarks'
            option.value = '';
            select.appendChild(option);

            Object.keys(bookmarkList).forEach(function(url) {
                const option = document.createElement('option');
                option.value = url;
                option.textContent = bookmarkList[url];
                select.appendChild(option);
            });
        };

        select.addEventListener(
            'change',
            function(event) { 
               if (event.target.value) {
                window.location.href = '/?url=' + encodeURIComponent(event.target.value);
               }
            }
        );
        updateBookmarks();

        {{#if url}}
        const url = decodeURIComponent(/\burl=([^&]+)/.exec(window.location.search)[1]);
        const toggleBookmark = document.getElementById('toggleBookmark');
        toggleBookmark.addEventListener(
            'click',
            function() {
                if (url in bookmarkList) {
                    delete bookmarkList[url];
                    this.textContent = '+ Bookmark';
                } else {
                    const title = document.getElementById('title').textContent.trim();
                    bookmarkList[url] = title.slice(0, 20);

                    if(title.length > bookmarkList[url].length) {
                        bookmarkList[url] += '‚Ä¶';
                    }
                    this.textContent = '- Bookmark';
                }
                document.cookie = 'bookmarks=' + 
                    encodeURIComponent(JSON.stringify(bookmarkList)) +
                    ';path=/;max-age=34560000';
                updateBookmarks();
            }
        );
        toggleBookmark.textContent = url in bookmarkList? '- Bookmark' : '+ Bookmark';
        {{/if}}
    </script>
</body>
</html>